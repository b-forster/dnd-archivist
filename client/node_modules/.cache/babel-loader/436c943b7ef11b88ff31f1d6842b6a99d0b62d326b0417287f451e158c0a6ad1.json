{"ast":null,"code":"var _jsxFileName = \"/Users/brianna/dnd-archivist/src/App.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport './App.css';\nimport Modal from 'react-modal';\nimport { Header } from '/components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nModal.setAppElement(document.getElementById('root'));\nfunction App() {\n  _s();\n  const [modalIsOpen, setIsOpen] = useState(false);\n  function openModal() {\n    setIsOpen(true);\n  }\n  // function afterOpenModal() {\n  // references are now sync'd and can be accessed.\n  // }\n  function closeModal() {\n    setIsOpen(false);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"nav\", {\n      children: /*#__PURE__*/_jsxDEV(\"a\", {\n        onClick: openModal,\n        children: \"+ Create a Character\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: modalIsOpen\n      // onAfterOpen={afterOpenModal}\n      ,\n      onRequestClose: closeModal,\n      contentLabel: \"Create Character\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"EOxo+0MXKxyCdUCTWpcfchJ0gFI=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","Modal","Header","jsxDEV","_jsxDEV","setAppElement","document","getElementById","App","_s","modalIsOpen","setIsOpen","openModal","closeModal","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","isOpen","onRequestClose","contentLabel","_c","$RefreshReg$"],"sources":["/Users/brianna/dnd-archivist/src/App.js"],"sourcesContent":["import { useState } from 'react';\nimport './App.css';\nimport Modal from 'react-modal';\nimport { Header } from '/components';\n\nModal.setAppElement(document.getElementById('root'));\n\nfunction App() {\n  const [modalIsOpen, setIsOpen] = useState(false);\n\n  function openModal() {\n    setIsOpen(true);\n  }\n  // function afterOpenModal() {\n  // references are now sync'd and can be accessed.\n  // }\n  function closeModal() {\n    setIsOpen(false);\n  }\n\n  return (\n    <div className=\"App\">\n      <Header />\n      <nav>\n        <a onClick={openModal}>+ Create a Character</a>\n      </nav>\n      <Modal\n        isOpen={modalIsOpen}\n        // onAfterOpen={afterOpenModal}\n        onRequestClose={closeModal}\n        contentLabel=\"Create Character\"\n      ></Modal>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAO,WAAW;AAClB,OAAOC,KAAK,MAAM,aAAa;AAC/B,SAASC,MAAM,QAAQ,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErCH,KAAK,CAACI,aAAa,CAACC,QAAQ,CAACC,cAAc,CAAC,MAAM,CAAC,CAAC;AAEpD,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,WAAW,EAAEC,SAAS,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;EAEhD,SAASY,SAASA,CAAA,EAAG;IACnBD,SAAS,CAAC,IAAI,CAAC;EACjB;EACA;EACA;EACA;EACA,SAASE,UAAUA,CAAA,EAAG;IACpBF,SAAS,CAAC,KAAK,CAAC;EAClB;EAEA,oBACEP,OAAA;IAAKU,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBX,OAAA,CAACF,MAAM;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACVf,OAAA;MAAAW,QAAA,eACEX,OAAA;QAAGgB,OAAO,EAAER,SAAU;QAAAG,QAAA,EAAC;MAAoB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5C,CAAC,eACNf,OAAA,CAACH,KAAK;MACJoB,MAAM,EAAEX;MACR;MAAA;MACAY,cAAc,EAAET,UAAW;MAC3BU,YAAY,EAAC;IAAkB;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzB,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV;AAACV,EAAA,CA3BQD,GAAG;AAAAgB,EAAA,GAAHhB,GAAG;AA6BZ,eAAeA,GAAG;AAAC,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
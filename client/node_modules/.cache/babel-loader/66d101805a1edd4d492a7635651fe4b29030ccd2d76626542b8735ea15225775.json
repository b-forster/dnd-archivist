{"ast":null,"code":"var _jsxFileName = \"/Users/brianna/dnd-archivist/src/components/AbilityRow/AbilityRow.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport './AbilityRow.css';\nimport { ABILITIES } from 'constants';\nimport { Input, InputLabel, Slider } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AbilityRow({\n  name,\n  modifier\n}) {\n  _s();\n  const [inputVal, setInputVal] = useState(0);\n  const [modifiedVal, setModifiedVal] = useState(0);\n  let abilityName = name;\n  if (!ABILITIES[abilityName]) return;\n  let abbr = ABILITIES[abilityName].abbr;\n  const formatModifierString = () => {\n    return modifier > 0 ? `+${modifier}` : '';\n  };\n  const handleChangeInputVal = e => {\n    let inputVal = parseInt(e.target.value);\n    setInputVal(inputVal);\n    setModifiedVal(inputVal + modifier);\n  };\n  const handleChangeSliderVal = e => {\n    let sliderVal = e.target.value;\n    setModifiedVal(sliderVal);\n    setInputVal(sliderVal - modifier);\n  };\n  const handleDiceClick = e => {\n    // Roll for stat: \n    // 1. Roll 4 x 6-sided dice\n    // 2. Drop lowest number\n    // 3. Add remaining total\n    const NUM_DIE_SIDES = 6;\n    const NUM_ROLLS = 4;\n    let dieRolls = [];\n    while (dieRolls.length < NUM_ROLLS) {\n      let dieRoll = Math.ceil(Math.random() * NUM_DIE_SIDES);\n      dieRolls.push(dieRoll);\n    }\n    let dieRollsDropLowest = dieRolls.sort().slice(1, NUM_ROLLS);\n    let dieRollsTotal = dieRollsDropLowest.reduce((total, current) => {\n      return total + current;\n    }, 0);\n    setInputVal(dieRollsTotal);\n  };\n  useEffect(() => {\n    setModifiedVal(inputVal + modifier);\n  }, [modifier]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"abilities-input-row\",\n    children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n      id: `${abbr}-input-label`,\n      htmlFor: `${abbr}-input`,\n      children: [abilityName, \":\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n      className: \"d20-img-link\",\n      onClick: handleDiceClick,\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"images/d20.png\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Input, {\n      type: \"number\",\n      id: `${abbr}-input`,\n      name: `stats[${abbr}]`,\n      value: inputVal,\n      defaultValue: 0,\n      min: 0,\n      max: 20,\n      onChange: handleChangeInputVal,\n      sx: {\n        width: '2em',\n        padding: '0',\n        fontFamily: 'Caveat, cursive',\n        fontSize: '1.5em'\n      },\n      size: \"small\",\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"ability-modifier-text\",\n      children: formatModifierString()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Slider, {\n      defaultValue: 0,\n      value: modifiedVal,\n      onChange: handleChangeSliderVal,\n      valueLabelDisplay: \"auto\",\n      \"aria-label\": abilityName,\n      getAriaValueText: () => {\n        return modifiedVal.toString();\n      },\n      min: 1,\n      max: 20,\n      sx: {\n        width: '10em',\n        marginLeft: '1em'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 9\n  }, this);\n}\n\n// TODO: Convert project to ts?\n// AbilityRow.propTypes = {\n//     name: React.PropTypes.string.isRequired,\n//     modifier: React.PropTypes.number,\n// };\n_s(AbilityRow, \"LfFSMdbZzhQrGLWplrcsHUkPn7Q=\");\n_c = AbilityRow;\nexport default AbilityRow;\nvar _c;\n$RefreshReg$(_c, \"AbilityRow\");","map":{"version":3,"names":["React","useEffect","useState","ABILITIES","Input","InputLabel","Slider","jsxDEV","_jsxDEV","AbilityRow","name","modifier","_s","inputVal","setInputVal","modifiedVal","setModifiedVal","abilityName","abbr","formatModifierString","handleChangeInputVal","e","parseInt","target","value","handleChangeSliderVal","sliderVal","handleDiceClick","NUM_DIE_SIDES","NUM_ROLLS","dieRolls","length","dieRoll","Math","ceil","random","push","dieRollsDropLowest","sort","slice","dieRollsTotal","reduce","total","current","className","children","id","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","onClick","src","type","defaultValue","min","max","onChange","sx","width","padding","fontFamily","fontSize","size","required","valueLabelDisplay","getAriaValueText","toString","marginLeft","_c","$RefreshReg$"],"sources":["/Users/brianna/dnd-archivist/src/components/AbilityRow/AbilityRow.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport './AbilityRow.css';\nimport { ABILITIES } from 'constants';\nimport {\n    Input, InputLabel, Slider,\n} from '@mui/material';\n\n\nfunction AbilityRow({ name, modifier }) {\n    const [inputVal, setInputVal] = useState(0);\n    const [modifiedVal, setModifiedVal] = useState(0);\n\n    let abilityName = name;\n    if (!ABILITIES[abilityName]) return;\n\n    let abbr = ABILITIES[abilityName].abbr;\n\n    const formatModifierString = () => {\n        return (modifier > 0) ? `+${modifier}` : '';\n    };\n\n    const handleChangeInputVal = (e) => {\n        let inputVal = parseInt(e.target.value);\n        setInputVal(inputVal);\n        setModifiedVal(inputVal + modifier);\n    };\n\n    const handleChangeSliderVal = (e) => {\n        let sliderVal = e.target.value;\n        setModifiedVal(sliderVal);\n        setInputVal(sliderVal - modifier);\n    };\n\n    const handleDiceClick = (e) => {\n        // Roll for stat: \n        // 1. Roll 4 x 6-sided dice\n        // 2. Drop lowest number\n        // 3. Add remaining total\n        const NUM_DIE_SIDES = 6;\n        const NUM_ROLLS = 4;\n        let dieRolls = [];\n\n        while (dieRolls.length < NUM_ROLLS) {\n            let dieRoll = Math.ceil(Math.random() * NUM_DIE_SIDES);\n            dieRolls.push(dieRoll);\n        }\n\n        let dieRollsDropLowest = dieRolls.sort().slice(1, NUM_ROLLS);\n\n        let dieRollsTotal = dieRollsDropLowest.reduce((total, current) => {\n            return total + current;\n        }, 0);\n\n        setInputVal(dieRollsTotal);\n    }\n\n\n    useEffect(() => {\n        setModifiedVal(inputVal + modifier);\n    }, [modifier]);\n\n    return (\n        <div className=\"abilities-input-row\">\n            <InputLabel\n                id={`${abbr}-input-label`}\n                htmlFor={`${abbr}-input`}\n            >\n                {abilityName}:\n            </InputLabel>\n\n            <a className=\"d20-img-link\" onClick={handleDiceClick}>\n                <img src=\"images/d20.png\" />\n            </a>\n\n            <Input\n                type=\"number\"\n                id={`${abbr}-input`}\n                name={`stats[${abbr}]`}\n                value={inputVal}\n                defaultValue={0}\n                min={0}\n                max={20}\n                onChange={handleChangeInputVal}\n                sx={{\n                    width: '2em', padding: '0', fontFamily: 'Caveat, cursive', fontSize:\n                        '1.5em',\n                }}\n                size='small'\n                required\n            />\n\n            <span className='ability-modifier-text'>\n                {formatModifierString()}\n            </span>\n\n            <Slider\n                defaultValue={0}\n                value={modifiedVal}\n                onChange={handleChangeSliderVal}\n                valueLabelDisplay=\"auto\"\n                aria-label={abilityName}\n                getAriaValueText={() => { return modifiedVal.toString(); }}\n                min={1}\n                max={20}\n                sx={{ width: '10em', marginLeft: '1em' }}\n            />\n        </div>\n    );\n}\n\n// TODO: Convert project to ts?\n// AbilityRow.propTypes = {\n//     name: React.PropTypes.string.isRequired,\n//     modifier: React.PropTypes.number,\n// };\n\nexport default AbilityRow;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
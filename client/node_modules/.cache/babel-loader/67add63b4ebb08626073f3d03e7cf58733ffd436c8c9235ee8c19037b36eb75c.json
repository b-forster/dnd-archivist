{"ast":null,"code":"var _jsxFileName = \"/Users/brianna/dnd-archivist/src/components/AbilityRow/AbilityRow.js\",\n  _s = $RefreshSig$();\nimport \"./AbilityRow.css\";\nimport { useEffect, useState } from \"react\";\nimport { ABILITIES } from \"constants\";\nimport { Input, InputLabel, Slider } from \"@mui/material\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AbilityRow(props) {\n  _s();\n  const [inputVal, setInputVal] = useState(0);\n  const [modifiedVal, setModifiedVal] = useState(0);\n  let modifier = props.modifier || 0;\n  let abilityName = props.name;\n  if (!ABILITIES[abilityName]) return;\n  let abbr = ABILITIES[abilityName].abbr;\n  const formatModifierString = () => {\n    return modifier > 0 ? `+${modifier}` : \"\";\n  };\n  const handleChangeInputVal = e => {\n    let inputVal = parseInt(e.target.value);\n    setInputVal(inputVal);\n    setModifiedVal(inputVal + modifier);\n  };\n  const handleChangeSliderVal = e => {\n    let sliderVal = e.target.value;\n    setModifiedVal(sliderVal);\n    setInputVal(sliderVal - modifier);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"abilities-input-row\",\n    children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n      id: `${abbr}-input-label`,\n      htmlFor: `${abbr}-input`,\n      children: [abilityName, \":\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Input, {\n      type: \"number\",\n      id: `${abbr}-input`,\n      name: `stats[${abbr}]`,\n      value: inputVal,\n      min: 0,\n      max: 20,\n      onChange: handleChangeInputVal,\n      sx: {\n        width: \"3em\",\n        padding: \"0\",\n        fontFamily: \"Caveat, cursive\",\n        fontSize: \"1.5em\"\n      },\n      size: \"small\",\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"ability-modifier-text\",\n      children: formatModifierString()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Slider, {\n      defaultValue: 0,\n      value: modifiedVal,\n      onChange: handleChangeSliderVal,\n      valueLabelDisplay: \"auto\",\n      \"aria-label\": abilityName,\n      getAriaValueText: () => {\n        return modifiedVal.toString();\n      },\n      min: 1,\n      max: 20,\n      sx: {\n        width: \"10em\",\n        marginLeft: \"1em\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n_s(AbilityRow, \"Thb2ud9yCBEwMK2D+GjWIcgFFuU=\");\n_c = AbilityRow;\nexport default AbilityRow;\nvar _c;\n$RefreshReg$(_c, \"AbilityRow\");","map":{"version":3,"names":["useEffect","useState","ABILITIES","Input","InputLabel","Slider","jsxDEV","_jsxDEV","AbilityRow","props","_s","inputVal","setInputVal","modifiedVal","setModifiedVal","modifier","abilityName","name","abbr","formatModifierString","handleChangeInputVal","e","parseInt","target","value","handleChangeSliderVal","sliderVal","className","children","id","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","min","max","onChange","sx","width","padding","fontFamily","fontSize","size","required","defaultValue","valueLabelDisplay","getAriaValueText","toString","marginLeft","_c","$RefreshReg$"],"sources":["/Users/brianna/dnd-archivist/src/components/AbilityRow/AbilityRow.js"],"sourcesContent":["import \"./AbilityRow.css\";\nimport { useEffect, useState } from \"react\";\nimport { ABILITIES } from \"constants\";\nimport { Input, InputLabel, Slider } from \"@mui/material\";\n\nfunction AbilityRow(props) {\n  const [inputVal, setInputVal] = useState(0);\n  const [modifiedVal, setModifiedVal] = useState(0);\n  let modifier = props.modifier || 0;\n\n  let abilityName = props.name;\n  if (!ABILITIES[abilityName]) return;\n\n  let abbr = ABILITIES[abilityName].abbr;\n\n  const formatModifierString = () => {\n    return modifier > 0 ? `+${modifier}` : \"\";\n  };\n\n  const handleChangeInputVal = (e) => {\n    let inputVal = parseInt(e.target.value);\n    setInputVal(inputVal);\n    setModifiedVal(inputVal + modifier);\n  };\n\n  const handleChangeSliderVal = (e) => {\n    let sliderVal = e.target.value;\n    setModifiedVal(sliderVal);\n    setInputVal(sliderVal - modifier);\n  };\n\n  return (\n    <div className=\"abilities-input-row\">\n      <InputLabel id={`${abbr}-input-label`} htmlFor={`${abbr}-input`}>\n        {abilityName}:\n      </InputLabel>\n\n      <Input\n        type=\"number\"\n        id={`${abbr}-input`}\n        name={`stats[${abbr}]`}\n        value={inputVal}\n        min={0}\n        max={20}\n        onChange={handleChangeInputVal}\n        sx={{\n          width: \"3em\",\n          padding: \"0\",\n          fontFamily: \"Caveat, cursive\",\n          fontSize: \"1.5em\",\n        }}\n        size=\"small\"\n        required\n      />\n\n      {/* <span class=\"stat-modifier\" id=\"strength\"></span>\n        <button type=\"button\" class=\"die-img\" disabled>20</button> */}\n\n      <span className=\"ability-modifier-text\">{formatModifierString()}</span>\n\n      <Slider\n        defaultValue={0}\n        value={modifiedVal}\n        onChange={handleChangeSliderVal}\n        valueLabelDisplay=\"auto\"\n        aria-label={abilityName}\n        getAriaValueText={() => {\n          return modifiedVal.toString();\n        }}\n        min={1}\n        max={20}\n        sx={{ width: \"10em\", marginLeft: \"1em\" }}\n      />\n    </div>\n  );\n}\n\nexport default AbilityRow;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}